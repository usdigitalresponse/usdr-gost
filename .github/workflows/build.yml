name: Build

permissions:
  contents: read
  packages: write

on:
  workflow_call:
    inputs:
      ref:
        type: string
        required: true
      build-server-image:
        description: Whether to build a `usdr-gost-api` Docker image using the `production-api.Dockerfile`.
        type: boolean
        default: true
      build-website:
        description: Whether to build website distribution artifacts for the client package.
        type: boolean
        default: true
      server-image-args-ref:
        description: Ref name for the build commit, like refs/heads/my-feature-branch-1.
        type: string
        required: true
      server-image-artifacts-retention-days:
        description: Number of days to store Docker attestation artifacts.
        type: number
        default: 90
      server-image-upload-attestations:
        description: Whether to upload attestation files for the Docker build as artifacts.
        type: boolean
        default: false
      server-image-push:
        description: Whether to push Docker images to the registry after building.
        type: boolean
        default: true
      server-image-name:
        description: Name of the docker image. Use caution when setting a non-default value.
        type: string
        default: ${{ github.repository }}-api
      server-image-registry:
        description: The Docker image registry. Use caution when setting a non-default value.
        type: string
        default: ghcr.io
      server-image-tag-latest:
        description: Tags image builds with `latest`.
        type: boolean
        default: false
      server-image-tag-production:
        description: Tags image builds with `production`.
        type: boolean
        required: false
      server-image-tag-pr:
        description: A PR number to add as a Docker image tag (as `pr-<value>`) when building for a pull request.
        type: string
        required: false
      server-image-tag-release:
        description: A tag value that, if provided, signifies the release version associated with the Docker image.
        type: string
        required: false
      server-image-version:
        description: Value to set for the `org.opencontainers.image.version label`.
        type: string
        default: ""
      website-artifact-retention-days:
        description: Number of days to retain website build artifacts.
        type: number
        default: 90
    outputs:
      build-server-image-result:
        value: ${{ jobs.server-docker-image.result }}
      build-website-result:
        value: ${{ jobs.website-bundle.result }}
      server-image-digest:
        value: ${{ jobs.server-docker-image.outputs.digest }}
      server-attestation-artifacts-key:
        value: ${{ jobs.server-docker-image.outputs.attestation-artifacts-key }}
      server-attestation-artifacts-path:
        value: ${{ jobs.server-docker-image.outputs.attestation-artifacts-path }}
      website-artifacts-key:
        value: ${{ jobs.website-bundle.outputs.artifacts-key }}
      website-artifacts-path:
        value: ${{ jobs.website-bundle.outputs.artifacts-path }}
      website-checksums-sha256:
        value: ${{ jobs.website-bundle.outputs.checksums-sha256 }}

jobs:
  server-docker-image:
    name: Build server Docker image
    if: inputs.build-server-image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      ATTESTATION_ARTIFACTS_KEY: "server-image-attestations-${{ inputs.ref }}"
    outputs:
      commit-tag: ${{ inputs.ref }}
      digest: ${{ steps.build-push.outputs.digest }}
      attestation-artifacts-key: ${{ env.ATTESTATION_ARTIFACTS_KEY }}
      attestation-artifacts-path: ${{ steps.store-attestations.outputs.path }}
    steps:
      - uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
        with:
          disable-sudo: true
          egress-policy: audit
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        id: checkout
        with:
          ref: ${{ inputs.ref }}
          show-progress: 'false'
          persist-credentials: 'false'
      - name: Set build info for the checked-out commit
        id: commit-sha
        run: echo "long=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
      - name: Set up QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0
        with:
          platforms: linux/amd64,linux/arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3.3.0
        with:
          platforms: linux/amd64,linux/arm64
      - name: Authenticate docker
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: ${{ inputs.server-image-registry }}/${{ inputs.server-image-name }}
          tags: |
            type=raw,enable=true,priority=100,prefix=sha-,value=${{ steps.commit-sha.outputs.long }}
            type=raw,enable=${{ inputs.server-image-tag-release != '' }},priority=200,value=${{ inputs.server-image-tag-release }}
            type=raw,enable=${{ inputs.server-image-tag-latest }},priority=300,value=latest
            type=raw,enable=${{ inputs.server-image-tag-pr != '' }},priority=600,prefix=pr-,value=${{ inputs.server-image-tag-pr }}
          labels: |
            org.opencontainers.image.title=${{ inputs.server-image-name }}
            org.opencontainers.image.version=${{ inputs.server-image-version }}
            org.opencontainers.image.revision=${{ steps.commit-sha.outputs.long }}
            com.datadoghq.tags.service=gost
            com.datadoghq.tags.version=${{ steps.commit-sha.outputs.long }}
      - name: Set bake file definition as step output
        id: bakefile
        run: |
          BAKEFILE_CONTENTS="$(cat $BAKEFILE_PATH)"
          echo "result<<ENDOFBAKEFILE" >> $GITHUB_OUTPUT
          echo "$BAKEFILE_CONTENTS" >> $GITHUB_OUTPUT
          echo "ENDOFBAKEFILE" >> $GITHUB_OUTPUT
        env:
          BAKEFILE_PATH: ${{ steps.meta.outputs.bake-file }}
      - name: Build and push Docker image
        id: build-push
        uses: docker/build-push-action@f6010ea70151369b06f0194be1051fbbdff851b2 # v6.0.2
        with:
          context: .
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push: ${{ inputs.server-image-push }}
          file: docker/production-api.Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: true
          sbom: true
          build-args: |
            GIT_COMMIT=${{ inputs.ref }}
            GIT_REF=${{ inputs.server-image-args-ref }}
            TIMESTAMP=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
      - name: Publish build results
        run: |
          REPORT_FILE=$(mktemp -t summary.md.XXXXX)
          cat >> $REPORT_FILE << 'ENDOFREPORT'
          ## Docker Build Summary

          **Image ID:** `${{ steps.build-push.outputs.imageid }}`
          **Image Digest:** `${{ steps.build-push.outputs.digest }}`

          <details>
          <summary>Bake File</summary>

          ```json
          ${{ steps.bakefile.outputs.result }}
          ```

          </details>
          <details>
          <summary>Build Metadata</summary>

          ```json
          ${{ steps.build-push.outputs.metadata }}
          ```

          </details>
          ENDOFREPORT
          cat "$REPORT_FILE" >> $GITHUB_STEP_SUMMARY
      - name: Store attestations
        id: store-attestations
        if: inputs.server-image-upload-attestations
        run: |
          ATTESTATIONS_DIR=$(mktemp -d)
          echo "path=$ATTESTATIONS_DIR" >> $GITHUB_OUTPUT
          docker buildx imagetools inspect "$INSPECT_NAME" --format "{{ json .SBOM }}" > $ATTESTATIONS_DIR/sbom.sdpx.json
          docker buildx imagetools inspect "$INSPECT_NAME" --format "{{ json .Provenance }}" > $ATTESTATIONS_DIR/provenance.json
        env:
          INSPECT_NAME: ${{ inputs.server-image-registry }}/${{ inputs.server-image-name }}@${{ steps.build-push.outputs.digest }}
      - name: Upload attestations
        if: steps.store-attestations.outcome == 'success'
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        with:
          name: ${{ env.ATTESTATION_ARTIFACTS_KEY }}
          path: ${{ steps.store-attestations.outputs.path }}
          if-no-files-found: error
          retention-days: ${{ inputs.server-image-artifacts-retention-days }}
          overwrite: true

  website-bundle:
    name: Build website deployment artifact
    if: inputs.build-website
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: none
    env:
      ARTIFACTS_KEY: website-${{ inputs.ref }}
      ARTIFACTS_PATH: ${{ github.workspace }}/packages/client/dist
    outputs:
      artifacts-key: ${{ env.ARTIFACTS_KEY }}
      artifacts-path: ${{ env.ARTIFACTS_PATH }}
      checksums-sha256: ${{ steps.checksums.outputs.sha256 }}
    steps:
      - uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
        with:
          disable-sudo: true
          egress-policy: audit
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          ref: ${{ inputs.ref }}
          show-progress: 'false'
          persist-credentials: 'false'
      - name: Setup Node
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: .nvmrc
          cache: yarn
          cache-dependency-path: yarn.lock
      - name: Install dependencies
        run: yarn workspace client install --frozen-lockfile
      - name: Build the website
        run: yarn workspace client build
      - name: Compute build artifact checksums
        id: checksums
        run: |
          DIST_CHECKSUMS=$(find "$ARTIFACTS_PATH" -type f -exec sha256sum {} \;)
          echo "sha256<<EOF" >> $GITHUB_OUTPUT
          echo "$DIST_CHECKSUMS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Publish build results
        run: |
          REPORT_FILE=$(mktemp -t summary.md.XXXXX)
          cat >> $REPORT_FILE << 'ENDOFREPORT'
          ## Build Website Summary

          <details>
          <summary>Checksums</summary>

          ```
          ${{ steps.checksums.outputs.sha256 }}
          ```

          </details>
          ENDOFREPORT
          cat "$REPORT_FILE" >> $GITHUB_STEP_SUMMARY
      - name: Upload build artifact
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        with:
          name: ${{ env.ARTIFACTS_KEY }}
          path: ${{ env.ARTIFACTS_PATH }}
          if-no-files-found: error
          retention-days: ${{ inputs.website-artifact-retention-days }}
          overwrite: true
