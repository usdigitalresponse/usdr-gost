name: Build GOST Website

# on:
#   push:
#     branches:
#       - _staging
#       - main
#       - 626-website-pipeline
#     paths:
#       - "packages/client/**"
#       - "yarn.lock"
#       - ".github/workflows/build-website.yaml"
#   pull_request: {}

on:
  push:
    branches:
      - "626-pipeline-v2"

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read

env:
  BUILD_DIR: packages/client

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - run: echo ${{ github.ref }}
      - uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16.14.0
          cache: yarn
      - name: Install dependencies
        working-directory: ${{ env.BUILD_DIR }}
        run: yarn install
      - name: Build the website
        working-directory: ${{ env.BUILD_DIR }}
        run: yarn build
      - name: Upload build artifact
        # if: ${{ github.event_name != 'pull_request' }} # TODO
        uses: actions/upload-artifact@v3
        with:
          name: website-${ github.sha }
          path: ${{ env.BUILD_DIR }}/dist

  deploy:
    needs:
      - build
    strategy:
      matrix:
        target:
          - ref: refs/heads/_staging
            environment: website-staging
          - ref: refs/heads/main
            environment: website-production
          - ref: refs/heads/626-pipeline-v2
            environment: website-sandbox
    environment: ${{ matrix.target.environment }}
    runs-on: ubuntu-latest
    # if: github.event_name == 'push' # TODO
    steps:
      - run: echo ${{ matrix.target.environment }}
      - run: env
      - name: Configure AWS Credentials
        if: github.ref == matrix.target.ref
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-to-assume: "${{ secrets.AWS_ROLE_TO_ASSUME }}"
      - name: Download build
        if: github.ref == matrix.target.ref
        uses: actions/download-artifact@v3
        with:
          name: website-${ github.sha }
          path: dist
      - name: Upload to S3 using environment ${{ matrix.target.environment }}
        if: github.ref == matrix.target.ref
        run: aws s3 sync ./dist ${{ secrets.S3_DEPLOYMENT_URI }} --sse --delete
